version: "3.8"

networks:
  game_platform_app_net:

volumes:
  postgres_db_volume:

services:
  postgres_db:
    image: postgres:13.0
    networks:
      - game_platform_app_net
    volumes:
      - postgres_db_volume:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: actix_pg_pass_test
      POSTGRES_USER: actix_pg_user_test 
      POSTGRES_DB: actix_pg_db_test
    deploy:
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.role == manager]

  adminer:
    image: adminer:4.7.7
    networks:
      - game_platform_app_net
    ports:
      - "8081:8080"
    depends_on:
      - postgres_db
    deploy:
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.role == manager]

  app:
    image: romanshushakov/game_platform_app:1.0.0
    environment:
      DATABASE_URL: postgresql://actix_pg_user_test:actix_pg_pass_test@postgres_db:5432/actix_pg_db_test
      SECRET_KEY: secret_key
    command: bash -c "diesel setup && diesel migration run && cargo run --release"
    networks:
      - game_platform_app_net
    ports:
      - "8080:8080"
    depends_on:
      - postgres_db
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.role == manager]

  visualizer:
    image: dockersamples/visualizer
    ports:
      - "8082:8080"
    stop_grace_period: 1m30s
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]
